<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2018 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
	id="_synchronizeTask"
	name="Synchronize Task"
	executionLabelExpression="Synchronize Task | Task ID: ${subject.taskId}"
	description=""
	subjectDOClassName="AssetCollectionTask"
	showInUserInterface="false"
	resultDataDef=""
	sdkVersion="5.4"
	>

	
	<initialStepName>check if workflow is running</initialStepName>
	

	<!-- ................................................. Initial Steps .................................................. -->
	<queryStep name="check if workflow is running"
		targetDataObjectClass="WorkflowExecution"
		resultDataDef="currentExecutions"
		executionLabelExpression="Is a workflow running already? ${currentExecutions.size() != 0}"
		pctComplete="1"
		>
		<transition condition="${currentExecutions.size() == 0}">
			<targetStepName>get associated ingest form</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>workflow is running</targetStepName>
		</transition>
		
		<criteria>
			<![CDATA[
                <criteria>
                    <and>
                        <condition property="workflowVersion.workflow.key" op="eq">
                            <test value="${ #this.workflow.workflowVersion.workflow.key }" />
                        </condition>
                        <condition property="uuid" op="noteq">
                            <test value="${ #this.workflow.uuid }" />
                        </condition>
                        <condition property="executionLabel" op="like">
							<test value="%Task ID: ${subject.taskId}" />
						</condition>
                        <condition property="status" op="in">
                            <tests>
                                <test value="CREATED" />
                                <test value="QUEUED" />
                                <test value="EXECUTING" />
                            </tests>
                        </condition>
                    </and>
                </criteria>
            ]]>
		</criteria>
	</queryStep>
	
	
	<!-- potentially needed once _synchronizeTaskHidden can be replaced -->
	<!--<submitHttpStep name="get task data"
		urlExpression="${assetServiceUrl}/tasks/${subject.taskId}"
		requestMethodExpression="GET"
		responsePayloadDataDef="taskData"
		continueOnException="true"
		executionLabelExpression="getting data for task ${subject.taskId}"
		pctComplete="5"
		>
		<transition condition="${taskData?.status == null OR taskData?.status.equals('')}">
			<targetStepName>task sync error</targetStepName>
		</transition>
		<transition condition="${taskData.status == 'COMPLETED'}">
			<targetStepName>get associated ingest form</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>task not ready to sync</targetStepName>
		</transition>
		
		<requestHeader name="api-key">${cloudformApiKey}</requestHeader>
		<requestHeader name="Content-Type">application/json</requestHeader>
	</submitHttpStep>-->


	<queryStep name="get associated ingest form"
		targetDataObjectClass="IngestFormDataObject"
		resultDataDef="ingestForm"
		executionLabelExpression="get ingest form for task ${subject.taskId}"
		pctComplete="10"
		nextStep="get assets"
		>
		<criteria>
			<![CDATA[
			<criteria>
				<and>
					<condition property="cloudformSchemaId" op="eq">
						<test value="${subject.cloudformSchemaId}"/>
					</condition>
				</and>
			</criteria>
			]]>
		</criteria>
	</queryStep>
	

	<!-- ............................................... Task Assets Loop ................................................. -->
	<submitHttpStep name="get assets"
		urlExpression="${assetServiceUrl}/tasks/${subject.taskId}/assets"
		requestMethodExpression="GET"
		responsePayloadDataDef="assetDataArray"
		responseCodeDataDef="assetsResponseCode"
		continueOnException="true"
		executionLabelExpression="getting assets | Range: [${offset},${offset + limit})"
		>
		<transition condition="${assetsResponseCode == 416}">
			<targetStepName>mark task as synchronized</targetStepName>
		</transition>
		<transition condition="${assetDataArray.size() > 0}">
			<targetStepName>ingest assets</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>task sync error</targetStepName>
		</transition>
		
		<param name="offset">${offset}</param>
		<param name="limit">${limit}</param>
		<requestHeader name="api-key">${cloudformApiKey}</requestHeader>
		<requestHeader name="Content-Type">application/json</requestHeader>
	</submitHttpStep>
	
	
	<executeSubflowStep name="ingest assets"
		targetWorkflowId="_ingestTaskAsset"
		subjectChangePath="${assetDataArray}"
		subflowTargetDataDef="assetData"
		executionLabelExpression="synchronizing ${assetDataArray.size()} assets | Range: [${offset},${offset + limit})"
		nextStep="update offset"
		>
		<subflowContextDataMapping parentDataDef="collection"           subflowDataDef="collection"/>
		<subflowContextDataMapping parentDataDef="ingestForm"           subflowDataDef="ingestForm"/>
	</executeSubflowStep>
	
	
	<setContextData name="update offset"
		targetDataDef="offset"
		valueExpression="${offset + limit}"
		devStep="true"
		nextStep="get assets"
		/>
	

	<!-- .............................................. Task Cleanup Steps ................................................ -->
	<saveDataObjectStep name="mark task as synchronized"
		dataObjectExpression="${subject}"
		executionLabelExpression="Task ${subject.taskId} synchronization complete."
		pctComplete="99"
		nextStep="end"
		>
		<property name="needsSynchronization">false</property>
	</saveDataObjectStep>
	
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end"    pctComplete="100"/>
	
	
	<!-- fail -->
	<failWorkflowStep name="workflow is running"
		executionLabelExpression="Workflow already executing on the task"
		reasonExpression="Workflow already executing on the task"
		/>
	
	
	<failWorkflowStep name="task sync error"
		reasonExpression="Task ID ${subject.id} had an error synchronizing. Check previous workflow steps for the error."
		executionLabelExpression="Task ID ${subject.id} had an error synchronizing. Check previous workflow steps for the error."
		/>
	
	
	<!-- ............................................... Context Data Defs ................................................ -->
	<!-- ....... Processing Variables ........ -->
	<contextDataDef name="collection"           dataType="Data Object"  defaultDataExpression="${subject.collection}"/>
	<contextDataDef name="ingestForm"           dataType="Data Object"/>
	<contextDataDef name="currentExecutions" 	dataType="Data Object" 	multiple="true"/>
	<!-- required in order to pass the subject down to the asset subflow -->
	<contextDataDef name="assetCollectionTask"  dataType="Data Object"  defaultDataExpression="${subject}"/>
	<!-- API Responses -->
	<contextDataDef name="taskData"             dataType="JSON"/>
	<contextDataDef name="assetDataArray"       dataType="JSON"         multiple="true"/>
	<contextDataDef name="assetsResponseCode"   dataType="Integer"/>
	<contextDataDef name="cleanupResponse"      dataType="Integer"/>
	<!-- API Config -->
	<contextDataDef name="cloudformApiKey"      dataType="String"       defaultDataExpression="${#sysconfig('cloudform.apiKey')}"/>
	<contextDataDef name="assetServiceUrl"      dataType="String"       defaultDataExpression="${#sysconfig('cloudform.assetService.url')}"/>
	<!-- Asset Loop -->
	<contextDataDef name="offset"               dataType="Integer"      defaultDataExpression="0"/>
	<contextDataDef name="limit"                dataType="Integer"      defaultDataExpression="${#sysconfig('workflows.default.collaborate.syncTasks.ingestAssets.batchSize') != null? #sysconfig('workflows.default.collaborate.syncTasks.ingestAssets.batchSize') : 10}"/>
	
</workflow>
