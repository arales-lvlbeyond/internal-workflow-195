<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2018 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
	id="_synchronizeSchemas"
	name="Synchronize Schemas"
	executionLabelExpression="Synchronize Schemas | Collaborate Configured? ${!collabNotConfigured}"
	subjectDOClassName=""
	showInUserInterface="false"
	sdkVersion="5.6"
	devWorkflow="true"
	>

	
	<initialStepName>check if workflow is running</initialStepName>
	
	
	<!-- ................................................. Initial Steps .................................................. -->
	<queryStep name="check if workflow is running"
		targetDataObjectClass="WorkflowExecution"
		resultDataDef="currentExecutions"
		executionLabelExpression="Is a workflow running already? ${currentExecutions.size() != 0}"
		pctComplete="1"
		>
		<transition condition="${currentExecutions.size() == 0}">
			<targetStepName>check collaborate config</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>workflow is running</targetStepName>
		</transition>
		
		<criteria>
		<![CDATA[
	        <criteria>
	            <and>
	                <condition property="workflowVersion.workflow.key" op="eq">
	                    <test value="${ #this.workflow.workflowVersion.workflow.key }" />
	                </condition>
	                <condition property="uuid" op="noteq">
	                    <test value="${ #this.workflow.uuid }" />
	                </condition>
	                <condition property="status" op="in">
	                    <tests>
	                        <test value="CREATED" />
	                        <test value="QUEUED" />
	                        <test value="EXECUTING" />
	                    </tests>
	                </condition>
	            </and>
	        </criteria>
        ]]>
		</criteria>
	</queryStep>
	
	
	<noopStep name="check collaborate config"
		executionLabelExpression="Is collaborate configured? ${!collabNotConfigured}"
		pctComplete="2"
		>
		<transition condition="${collabNotConfigured}">
			<targetStepName>collaborate config log</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>find ingest forms to sync</targetStepName>
		</transition>
	</noopStep>
	
	
	<testStep name="collaborate config log"
		outputExpression="
			Reach Engine Cloudform is not properly configured.
			Current Required Properties and Values for Debug:
			cloudform.apiKey=${#sysconfig('cloudform.apiKey')}
			cloudform.analyticsService.url=${#sysconfig('cloudform.analyticsService.url')}
			cloudform.assetService.url=${#sysconfig('cloudform.assetService.url')}
			cloudform.deliveryService.url=${#sysconfig('cloudform.deliveryService.url')}
			cloudform.metadataSearchService.url=${#sysconfig('cloudform.metadataSearchService.url')}
			cloudform.securityService.url=${#sysconfig('cloudform.securityService.url')}
			cloudform.scratchImportDirectory=${#sysconfig('cloudform.scratchImportDirectory')}
		"
		executionLabelExpression="check log for collaborate configuration details"
		nextStep="collaborate config error"
		/>
	

	<queryStep name="find ingest forms to sync"
		targetDataObjectClass="IngestFormDataObject"
		resultDataDef="ingestForms"
		pctComplete="5"
		>
		<transition condition="${ingestForms.size() &gt; 0}">
			<targetStepName>query for running subflows</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>no ingest forms to sync</targetStepName>
		</transition>
	</queryStep>
	
	
	<!-- ............................................. Synchronize Queue Loop ............................................. -->
	<queryStep name="query for running subflows"
		targetDataObjectClass="WorkflowExecution"
		resultDataDef="executingSubflows"
		executionLabelExpression="checking for workflows (with key = _synchronizeTask) that are not in a finished state"
		devStep="true"
		nextStep="check running subflows"
		>
		<criteria>
		<![CDATA[
            <criteria>
                <and>
                    <condition property="workflowVersion.workflow.key" op="eq">
                        <test value="_synchronizeTask"/>
                    </condition>
                    <condition property="status" op="in">
                        <tests>
                            <test value="CREATED" />
                            <test value="QUEUED" />
                            <test value="EXECUTING" />
                         </tests>
                    </condition>
                </and>
            </criteria>
        ]]>
		</criteria>
	</queryStep>
	
	
	<noopStep name="check running subflows"
		executionLabelExpression="number of subflows (key = _synchronizeTask) running >>> ${executingSubflows.size()} out of ${queueLimit}"
		devStep="true"
		>
		<transition condition="${ executingSubflows.size() &lt; queueLimit }">
			<targetStepName>ready next ingest forms</targetStepName>
		</transition>
		<transition condition="${ true }">
			<targetStepName>queue full</targetStepName>
		</transition>
	</noopStep>
	
	
	<delayStep name="queue full"
		delaySecondsExpression="${ queryPollInterval }"
		executionLabelExpression="${ingestForms.size()} ingest forms remaining | Subflows running: ${executingSubflows.size()}/${queueLimit} | Waiting ${queryPollInterval} seconds."
		nextStep="query for running subflows"
		/>
	
	
	<setContextData name="ready next ingest forms"
		targetDataDef="nextForms"
		valueExpression="${ingestForms.size() &gt; batchSize ? ingestForms.subList(0, batchSize) : ingestForms.subList(0, ingestForms.size()) }"
		executionLabelExpression="got ${nextForms.size()} ingest forms to process"
		nextStep="remove ingest forms from main list"
		devStep="true"
		/>
	
	
	<groovyStep name="remove ingest forms from main list"
		resultDataDef="ingestForms"
		executionLabelExpression="remove ${nextForms.size()} ingest forms from the main list"
		nextStep="synchronize ingest forms"
		devStep="true"
		>
		<script>
		<![CDATA[
	        ingestForms.removeAll(nextForms)
	        return ingestForms
     	]]>
		</script>
	</groovyStep>
	
	
	<executeSubflowStep name="synchronize ingest forms"
		targetWorkflowId="_synchronizeForm"
		executionLabelExpression="Preparing ${nextForms.size()} ingest forms to sync. | ${ingestForms.size()} ingest forms remaining | Subflows running: ${executingSubflows.size()}/${queueLimit}"
		subjectChangePath="${nextForms}"
		waitForCompletionExpression="false"
		nextStep="check for more ingest forms"
		/>
	
	
	<noopStep name="check for more ingest forms"
		executionLabelExpression="number of ingest forms remaining >>> ${ingestForms.size()}"
		devStep="true"
		>
		<transition condition="${ingestForms.size() &gt; 0}">
			<targetStepName>query for running subflows</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>end</targetStepName>
		</transition>
	</noopStep>
	
	
	<!-- ................................................... End Steps .................................................... -->
	<noopStep name="no ingest forms to sync"
		pctComplete="99"
		nextStep="end"
		/>
	
	
	<noopStep name="end"    pctComplete="100"/>
	
	
	<!-- fail -->
	<failWorkflowStep name="workflow is running"
		executionLabelExpression="Workflow already executing"
		reasonExpression="Workflow already executing"
		/>
	
	
	<failWorkflowStep name="collaborate config error"
		reasonExpression="collaborate configurations are invalid"
		executionLabelExpression="collaborate configurations are invalid"
		/>
	
	
	<!-- ............................................... Context Data Defs ................................................ -->
	<!-- ....... Processing Variables ........ -->
	<contextDataDef name="ingestForms"          dataType="Data Object"  multiple="true"/>
	<contextDataDef name="currentExecutions" 	dataType="Data Object" 	multiple="true"/>
	<!-- long expression to make sure all the required configurations for collaborate are present -->
	<contextDataDef name="collabNotConfigured"  dataType="Boolean"      defaultDataExpression="${#sysconfig('cloudform.apiKey') == null OR #sysconfig('cloudform.apiKey') == '' OR #sysconfig('cloudform.analyticsService.url') == null OR #sysconfig('cloudform.analyticsService.url') == '' OR #sysconfig('cloudform.assetService.url') == null OR #sysconfig('cloudform.assetService.url') == '' OR #sysconfig('cloudform.deliveryService.url') == null OR #sysconfig('cloudform.deliveryService.url') == '' OR #sysconfig('cloudform.metadataSearchService.url') == null OR #sysconfig('cloudform.metadataSearchService.url') == '' OR #sysconfig('cloudform.securityService.url') == null OR #sysconfig('cloudform.securityService.url') == '' OR #sysconfig('cloudform.scratchImportDirectory') == null OR #sysconfig('cloudform.scratchImportDirectory') == ''}"/>
	<!-- queue loop variables -->
	<contextDataDef name="nextForms"    		dataType="Data Object" 	multiple="true"/>
	<contextDataDef name="executingSubflows" 	dataType="Data Object" 	multiple="true"/>
	<contextDataDef name="queueLimit" 			dataType="Integer" 		defaultDataExpression="${#sysconfig('workflows.default.collaborate.syncSchemas.queueLimit') != null? #sysconfig('workflows.default.collaborate.syncSchemas.queueLimit') : 11}"/>
	<contextDataDef name="batchSize" 		    dataType="Integer" 		defaultDataExpression="${#sysconfig('workflows.default.collaborate.syncSchemas.batchSize') != null? #sysconfig('workflows.default.collaborate.syncSchemas.batchSize') : 10}"/>
	<contextDataDef name="queryPollInterval"  	dataType="Integer" 		defaultDataExpression="${#sysconfig('workflows.default.collaborate.syncSchemas.queryPollInterval') != null? #sysconfig('workflows.default.collaborate.syncSchemas.queryPollInterval') : 60}"/>

</workflow>