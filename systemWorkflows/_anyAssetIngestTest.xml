<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2018 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
	id="_anyAssetIngestTest"
	name="Any Asset Ingest Test"
	executionLabelExpression="Any Asset Ingest Test | File: ${fileToIngest.absolutePath}"
	description=""
	subjectDOClassName=""
	resultDataDef="assetMaster"
	deadlineExpression=""
	showInUserInterface="false"
	sdkVersion="5.21"
	>
	
	
	<initialStepName>check if workflow is running</initialStepName>
	
	
	<queryStep name="check if workflow is running"
		targetDataObjectClass="WorkflowExecution"
		resultDataDef="currentExecutions"
		executionLabelExpression="Is a workflow running on this file already? ${currentExecutions.size() != 0}"
		pctComplete="5"
		>
		<transition condition="${currentExecutions.size() == 0}">
			<targetStepName>ingest asset</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>workflow is running</targetStepName>
		</transition>
		
		<criteria>
			<![CDATA[
                <criteria>
                    <and>
                        <condition property="workflowVersion.workflow.key" op="eq">
                            <test value="${ #this.workflow.workflowVersion.workflow.key }" />
                        </condition>
                        <condition property="uuid" op="noteq">
                            <test value="${ #this.workflow.uuid }" />
                        </condition>
                        <condition property="executionLabel" op="like">
							<test value="%${fileToIngest.absolutePath}%" />
						</condition>
                        <condition property="status" op="in">
                            <tests>
                                <test value="CREATED" />
                                <test value="QUEUED" />
                                <test value="EXECUTING" />
                            </tests>
                        </condition>
                    </and>
                </criteria>
            ]]>
		</criteria>
	</queryStep>
	
	
	<executeSubflowStep name="ingest asset"
		targetWorkflowId="${ingestSubflow}"
		subjectChangePath="${fileToIngest}"
		subflowTargetDataDef="fileToIngest"
		resultDataDef="assetMaster"
		executionLabelExpression="ingesting ${fileToIngest.absolutePath}"
		pctComplete="25"
		nextStep="set metadata"
		>
		<subflowContextDataMapping parentDataDef="assetVersion"             subflowDataDef="assetVersion"/>
		<subflowContextDataMapping parentDataDef="assetName"                subflowDataDef="assetName"/>
		<subflowContextDataMapping parentDataDef="sourceAsMezz"             subflowDataDef="sourceAsMezz"/>
		<subflowContextDataMapping parentDataDef="checkForDuplicate"        subflowDataDef="checkForDuplicate"/>
		<subflowContextDataMapping parentDataDef="overwriteExisting"        subflowDataDef="overwriteExisting"/>
		<subflowContextDataMapping parentDataDef="versionDuplicate"         subflowDataDef="versionDuplicate"/>
	</executeSubflowStep>
	
	
	<executeSubflowStep name="set metadata"
		targetWorkflowId="${metadataSubflow}"
		subjectChangePath="${assetMaster}"
		subflowTargetDataDef="asset"
		executionLabelExpression="Add any collections, categories, and metadata"
		pctComplete="50"
		nextStep="create proxies"
		>
		<subflowContextDataMapping parentDataDef="failOnMetadataError"      subflowDataDef="failOnError"/>
		<subflowContextDataMapping parentDataDef="collections"              subflowDataDef="collections"/>
		<subflowContextDataMapping parentDataDef="metadataForm"             subflowDataDef="metadataForm"/>
		<subflowContextDataMapping parentDataDef="metadataFormType"         subflowDataDef="metadataFormType"/>
		<subflowContextDataMapping parentDataDef="categories"               subflowDataDef="categories"/>
		<subflowContextDataMapping parentDataDef="jsonMetadata"             subflowDataDef="jsonMetadata"/>
		<subflowContextDataMapping parentDataDef="linkMetadata"             subflowDataDef="linkMetadata"/>
	</executeSubflowStep>
	
	
	<executeSubflowStep name="create proxies"
		targetWorkflowId="${proxiesSubflow}"
		subjectChangePath="${assetMaster}"
		waitForCompletionExpression="${!asyncProxies}"
		executionLabelExpression="Creating proxies ${asyncProxies? 'asynchronous' : 'synchronous'}"
		pctComplete="99"
		nextStep="end"
		>
		<subflowContextDataMapping parentDataDef="failOnProxiesError"       subflowDataDef="failOnError"/>
		<!-- create -->
		<subflowContextDataMapping parentDataDef="prioritiesJson"           subflowDataDef="prioritiesJson"/>
		<subflowContextDataMapping parentDataDef="createMezz"               subflowDataDef="createMezz"/>
		<subflowContextDataMapping parentDataDef="createProxy"              subflowDataDef="createProxy"/>
		<subflowContextDataMapping parentDataDef="createThumbVideo"         subflowDataDef="createThumbVideo"/>
		<subflowContextDataMapping parentDataDef="createThumb"              subflowDataDef="createThumb"/>
		<!-- file -->
		<subflowContextDataMapping parentDataDef="mezzFile"                 subflowDataDef="mezzFile"/>
		<subflowContextDataMapping parentDataDef="proxyFile"                subflowDataDef="proxyFile"/>
		<subflowContextDataMapping parentDataDef="thumbFile"                subflowDataDef="thumbFile"/>
		<subflowContextDataMapping parentDataDef="thumbVideoFile"           subflowDataDef="thumbVideoFile"/>
		<!-- creation templates/args -->
		<subflowContextDataMapping parentDataDef="videoMezzTemplate"        subflowDataDef="videoMezzTemplate"/>
		<subflowContextDataMapping parentDataDef="videoProxyTemplate"       subflowDataDef="videoProxyTemplate"/>
		<subflowContextDataMapping parentDataDef="videoThumbVideoTemplate"  subflowDataDef="videoThumbVideoTemplate"/>
		<subflowContextDataMapping parentDataDef="videoThumbnailPercentage" subflowDataDef="videoThumbnailPercentage"/>
		<subflowContextDataMapping parentDataDef="audioProxyTemplate"       subflowDataDef="audioProxyTemplate"/>
		<subflowContextDataMapping parentDataDef="imageProxyArguments"      subflowDataDef="imageProxyArguments"/>
		<subflowContextDataMapping parentDataDef="imageThumbArguments"      subflowDataDef="imageThumbArguments"/>
		<subflowContextDataMapping parentDataDef="documentProxyArguments"   subflowDataDef="documentProxyArguments"/>
		<subflowContextDataMapping parentDataDef="documentThumbArguments"   subflowDataDef="documentThumbArguments"/>
	</executeSubflowStep>
	
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end"	pctComplete="100"/>
	
	
	<!-- fail -->
	<failWorkflowStep name="workflow is running"
		executionLabelExpression="Workflow already executing on the file"
		reasonExpression="Workflow already executing on the file"
		/>
	
	
	<!-- ............................................... Context Data Defs ................................................ -->
	<!-- ....... User Input Variables ........ -->
	<contextDataDef name="fileToIngest" 		    dataType="File"				userInput="true"    label="01: File To Ingest"       required="true"/>
	<contextDataDef name="collections"              dataType="Data Object"      userInput="true"    label="02: Collections"          multiple="true">
		<picklist>
			<dataObjectSearch dataObjectClass="AssetCollection">
				<searchPath>name</searchPath>
			</dataObjectSearch>
		</picklist>
	</contextDataDef>
	<contextDataDef name="metadataForm"             dataType="MetadataForm"     userInput="true"    label="03: Metadata Form"/>
	
	<!-- .......... Input Variables .......... -->
	<!-- metadata options -->
	<contextDataDef name="metadataFormType"         dataType="String"           userInput="true"    label="04: Metadata Form Type"   defaultDataExpression="access">
		<description>
			TEMPORARY!!! (Forms will be standardized to the same format in the future)
			Valid types = "access" or "panel"
		</description>
	</contextDataDef>
	<contextDataDef name="failOnMetadataError"      dataType="Boolean"          userInput="true"    label="05: Fail On Metadata Error?"/>
	<contextDataDef name="categories"               dataType="Data Object"      userInput="true"    label="06: Categories"           multiple="true">
		<picklist>
			<dataObjectSearch dataObjectClass="AssetCategory">
				<searchPath>name</searchPath>
			</dataObjectSearch>
		</picklist>
	</contextDataDef>
	<contextDataDef name="jsonMetadataString"       dataType="String"           userInput="true"    label="07: Metadata JSON">
		<description>
			Single JSON where:
				Keys are metadata property names
				Values are what to set the matching property to on this asset
		</description>
	</contextDataDef>
	<contextDataDef name="jsonMetadata"             dataType="JSON"             defaultDataExpression="${jsonMetadataString}">
		<description>
			Single JSON where:
				Keys are metadata property names
				Values are what to set the matching property to on this asset
		</description>
	</contextDataDef>
	<contextDataDef name="linkMetadataString"       dataType="String"           userInput="true"    label="08: Link Metadata JSON">
		<description>
			Array of JSONs where:
				Each JSON has 2 Keys (propertyName and linkInfo):
					propertyName's value is a metadata property name of type link
					linkInfo's value is a JSON with 2 keys (title and url):
						title's value is the display name for the link
						url's value is the url to open when the title is clicked on
		</description>
	</contextDataDef>
	<contextDataDef name="linkMetadata"             dataType="JSON"             multiple="true"     defaultDataExpression="${linkMetadataString}">
		<description>
			Array of JSONs where:
				Each JSON has 2 Keys (propertyName and linkInfo):
					propertyName's value is a metadata property name of type link
					linkInfo's value is a JSON with 2 keys (title and url):
						title's value is the display name for the link
						url's value is the url to open when the title is clicked on
		</description>
	</contextDataDef>
	<!-- ingest source options (defaults in subflow) -->
	<contextDataDef name="sourceAsMezz"             dataType="Boolean"          userInput="true"    label="09: Use Source As Mezz?"             defaultDataExpression="${skipMezzanineFlag != null? skipMezzanineFlag : null}"/>
	<contextDataDef name="checkForDuplicate"        dataType="Boolean"          userInput="true"    label="10: Check For Duplicate Asset?"      defaultDataExpression="${allowDuplicateNamesFlag != null? !allowDuplicateNamesFlag : null}"/>
	<contextDataDef name="overwriteExisting"        dataType="Boolean"          userInput="true"    label="11: Overwrite Source If Dup Found?"/>
	<contextDataDef name="versionDuplicate"         dataType="Boolean"/>
	<contextDataDef name="assetName"                dataType="String"           userInput="true"    label="12: Specify Asset Name"              defaultDataExpression="${versionName != null? versionName : null}"/>
	<contextDataDef name="assetVersion" 		    dataType="Data Object"      defaultDataExpression="${assetForVersioning != null? assetForVersioning : null}">
		<description>
			Passed in to operate on an existing asset rather than looking for a duplicate asset or creating a new one
		</description>
	</contextDataDef>
	<!-- transcode options -->
	<contextDataDef name="failOnProxiesError"       dataType="Boolean"          userInput="true"    label="13: Fail On Proxy Error?"/>
	<contextDataDef name="asyncProxies"             dataType="Boolean"          userInput="true"    label="14: Async Proxy Generation?"         defaultDataExpression="${asyncProxiesFlag != null? asyncProxiesFlag : false}"/>
	<!-- create proxies? (defaults in subflows) -->
	<contextDataDef name="prioritiesJsonString"     dataType="String"           userInput="true"    label="15: Transcode Priority JSON">
		<description>
			A JSON with the structure:
				{"mezzanine":w, "proxy":x, "thumbnailVideo":y, "thumbnail":z}
		</description>
	</contextDataDef>
	<contextDataDef name="prioritiesJson"           dataType="JSON"             defaultDataExpression="${prioritiesJsonString}">
		<description>
			A JSON with the structure:
				{"mezzanine":w, "proxy":x, "thumbnailVideo":y, "thumbnail":z}
		</description>
	</contextDataDef>
	<contextDataDef name="createMezz"               dataType="Boolean"          userInput="true"    label="16: Create A Mezzanine?"/>
	<contextDataDef name="createProxy"              dataType="Boolean"          userInput="true"    label="17: Create A Proxy?"/>
	<contextDataDef name="createThumb"              dataType="Boolean"          userInput="true"    label="18: Create A Thumbnail?"/>
	<contextDataDef name="createThumbVideo"         dataType="Boolean"          userInput="true"    label="19: Create A Thumbnail Video?"/>
	<!-- supply a file for proxies? -->
	<contextDataDef name="mezzFile"                 dataType="File"             userInput="true"    label="20: Supply A Mezzanine File"/>
	<contextDataDef name="proxyFile"                dataType="File"             userInput="true"    label="21: Supply A Proxy File"/>
	<contextDataDef name="thumbFile"                dataType="File"             userInput="true"    label="22: Supply A Thumbnail File"/>
	<contextDataDef name="thumbVideoFile"           dataType="File"             userInput="true"    label="23: Supply A Thumbnail Video File"/>
	<!-- Templates/Args for proxies creation (defaults in subflows) -->
	<contextDataDef name="videoMezzTemplate"    	dataType="String"           userInput="true"    label="24: Video Mezzanine Template Name"/>
	<contextDataDef name="videoProxyTemplate"    	dataType="String"           userInput="true"    label="25: Video Proxy Template Name"/>
	<contextDataDef name="videoThumbVideoTemplate"  dataType="String"           userInput="true"    label="26: Video ThumbnailVideo Template Name"/>
	<contextDataDef name="videoThumbnailPercentage" dataType="Integer"          userInput="true"    label="27: Video Thumbnail Percentage"/>
	<contextDataDef name="audioProxyTemplate"       dataType="String"           userInput="true"    label="28: Audio Proxy Template Name"/>
	<contextDataDef name="imageProxyArguments"      dataType="String"           userInput="true"    label="29: Image Proxy ImageMagick Arguments"/>
	<contextDataDef name="imageThumbArguments"      dataType="String"           userInput="true"    label="30: Image Thumbnail ImageMagick Arguments"/>
	<contextDataDef name="documentProxyArguments"   dataType="String"           userInput="true"    label="31: Document Proxy ImageMagick Arguments"/>
	<contextDataDef name="documentThumbArguments"   dataType="String"           userInput="true"    label="32: Document Thumbnail ImageMagick Arguments"/>
	
	<!-- ....... Processing Variables ........ -->
	<contextDataDef name="currentExecutions" 	    dataType="Data Object" 	    multiple="true"/>
	<contextDataDef name="assetMaster" 			    dataType="Data Object"/>
	<contextDataDef name="ingestSubflow"            dataType="String"           defaultDataExpression="${#sysconfig('workflows.default.ingestAsset.sourceIngestWorkflow') != null? #sysconfig('workflows.default.ingestAsset.sourceIngestWorkflow') : '_baseAssetIngest'}"/>
	<contextDataDef name="metadataSubflow"          dataType="String"           defaultDataExpression="${#sysconfig('workflows.default.ingestAsset.metadataWorkflow') != null? #sysconfig('workflows.default.ingestAsset.metadataWorkflow') : '_saveAnyAssetMetadata'}"/>
	<contextDataDef name="proxiesSubflow"           dataType="String"           defaultDataExpression="${#sysconfig('workflows.default.ingestAsset.proxiesWorkflow') != null? #sysconfig('workflows.default.ingestAsset.proxiesWorkflow') : '_createProxiesAnyAsset'}"/>
	
	<!-- ..... Deprecated But Supported ...... -->
	<contextDataDef name="assetForVersioning"       dataType="Data Object"/>
	<contextDataDef name="asyncProxiesFlag"         dataType="Boolean"/>
	<contextDataDef name="skipMezzanineFlag"        dataType="Boolean"/>
	<contextDataDef name="allowDuplicateNamesFlag"  dataType="Boolean"/>
	<contextDataDef name="versionName"              dataType="String"/>

</workflow>