<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2018 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
    id="_exportVideoClip"
    name="Export Video Clip"
    executionLabelExpression="Export Video Clip | Clip: ${subject.name}"
	sdkVersion=""
    subjectDOClassName="VideoClip"
    showInUserInterface="false"
    resultDataDef="exportedFile"
	>
    
	
    <initialStepName>export clip</initialStepName>

	
    <noopStep name="check for archived content"
	    pctComplete="5"
        executionLabelExpression="Is the source archived? ${contentArchived}"
	    devStep="true"
        >
        <transition condition="${contentArchived}">
            <targetStepName>content archived</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>export clip</targetStepName>
        </transition>
    </noopStep>
    
	
    <convertVideoStep name="export clip"
	    pctComplete="80"
        executionLabelExpression="Converting clip with template: ${targetTemplateName}"
        mediaConversionTemplateExpression="${targetTemplateName}" 
        targetContentTemplateExpression="${targetTemplateName}"      
        sourceFileExpression="${sourceFile}"
        trimStartExpression="${exportTrimStart}"
        trimEndExpression="${exportTrimEnd}"
        resultDataDef="transcodeResultFile"
        priorityExpression="${priority}"
	    continueOnException="true"
        >
	    <transition condition="${transcodeResultFile.exists()}">
		    <targetStepName>copy transcode result</targetStepName>
	    </transition>
        <transition condition="true">
            <targetStepName>transcode error</targetStepName>
        </transition>
    </convertVideoStep>
    
	
    <copyFileStep name="copy transcode result"
	    pctComplete="90"
        executionLabelExpression="Copy transcoded file to destination: ${exportPath.absolutePath})"
        sourceFileExpression="${transcodeResultFile}"
        targetDirectoryExpression="${exportPath}"
        targetFilenameExpression="${#baseFilename(subject.name)}-${targetTemplateName}.${#extension(transcodeResultFile.name)}"
        resultDataDef="exportedFile"
	    continueOnException="true"
        >
	    <transition condition="${exportedFile.exists()}">
		    <targetStepName>delete transcode artifact</targetStepName>
	    </transition>
        <transition condition="true">
            <targetStepName>copy error</targetStepName>
        </transition>
    </copyFileStep>
    
	
    <deleteFileStep name="delete transcode artifact"
	    pctComplete="95"
	    executionLabelExpression="Deleting transcode artifact: ${transcodeResultFile.absolutePath}"
        sourceFilesExpression="${transcodeResultFile}"
	    continueOnException="true"
	    devStep="true"
        nextStep="end"
	    />
	
	
	<!-- ................................................... End Steps .................................................... -->
    <noopStep name="end"/>
	
	
	<failWorkflowStep name="content archived"
		reasonExpression="can not export archived content"
		executionLabelExpression="can not export archived content"
		/>
	
	
	<failWorkflowStep name="transcode error"
		reasonExpression="unable to transcode"
		executionLabelExpression="Unable to transcode with template: ${targetTemplateName}. Check transcoder and previous step for errors."
		/>
	
	
	<failWorkflowStep name="copy error"
		reasonExpression="can not copy file to destination"
		executionLabelExpression="can not copy the transcoded file to the final destination: ${exportPath.absolutePath}. Check previous step for error."
		/>
	
	
	<!-- ............................................... Context Data Defs ................................................ -->
	<!-- .......... Input .......... -->
	<!-- required -->
    <contextDataDef name="exportPath"           dataType="Directory"    userInput="true"/>
    <contextDataDef name="targetTemplateName"   dataType="String"       userInput="true"/>
	<!-- optional -->
	<contextDataDef name="priority"             dataType="Integer"      defaultDataExpression="85"/>
	
	<!-- ....... Processing ........ -->
	<contextDataDef name="exportTrimStart"      dataType="Double"       defaultDataExpression="${subject.assetClipStartOffset}"/>
	<contextDataDef name="exportTrimEnd"        dataType="Double"       defaultDataExpression="${subject.assetClipEndOffset}"/>
	<contextDataDef name="sourceContent"        dataType="Data Object"  defaultDataExpression="${subject.assetMaster.originalContent}"/>
    <contextDataDef name="sourceFile"           dataType="File"         defaultDataExpression="${sourceContent.file}"/>
	<contextDataDef name="contentArchived"      dataType="Boolean"      defaultDataExpression="${sourceContent.truncatedFlag}"/>
    <contextDataDef name="transcodeResultFile"  dataType="File"/>
    <contextDataDef name="exportedFile"         dataType="File"/>
    
</workflow>
