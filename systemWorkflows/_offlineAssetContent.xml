<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2018 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://levelsbeyond.com/schema/workflow"
          xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
          id="_offlineAssetContent"
          name="Offline Asset Content"
          executionLabelExpression="Offline Asset Content ${subject.file?.absolutePath}"
          subjectDOClassName="AssetContent"
          subjectQualifierExpression="${truncatedFlag == null or truncatedFlag == false}"
          adminOnly="true"
          showInUserInterface="false"
          sdkVersion="4.2">

	<initialStepName>check content archived</initialStepName>

	<noopStep name="check content archived">
		<transition condition="${subject.restoreKey == null or subject.restoreKey == ''}">
			<targetStepName>archive content</targetStepName>
		</transition>
		<transition condition="=true">
			<targetStepName>offline content</targetStepName>
		</transition>
	</noopStep>

	<executeSubflowStep name="archive content"
	                    targetWorkflowId="${#sysconfig('workflows.assetArchiveWorkflow')}"
	                    continueOnException="false">
		<transition condition="${true}">
			<targetStepName>offline content</targetStepName>
		</transition>
	</executeSubflowStep>

	<setContextData name="offline content" targetDataDef="offlineAssetContent" valueExpression="${#assetService().truncate(subject)}">
		<transition condition="=true">
			<targetStepName>raise content offline event</targetStepName>
		</transition>
	</setContextData>

	<raiseWorkflowEventStep
		name="raise content offline event"
		eventTypeExpression="ContentOfflined"
		executionLabelExpression="Sending Content Offline event"
		summaryExpression="Asset content has been set offline">
		<property name="contentFilePath">${subject.file?.absolutePath}</property>
		<property name="restoreKey">${subject.restoreKey}</property>
	</raiseWorkflowEventStep>

	<noopStep name="end"></noopStep>

	<contextDataDef dataType="Data Object" name="offlineAssetContent"/>

</workflow>
