<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://levelsbeyond.com/schema/workflow"
          xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
          xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
          id="testAddCategory"
          name="testAddCategory"
          executionLabelExpression="testAddCategory | "
          subjectDOClassName="AssetMaster"
          showInUserInterface="true"
          sdkVersion="">

    <initialStepName>Begin</initialStepName>

    <noopStep name="Begin" devStep="true">
        <transition condition="${checkIfExist}">
            <targetStepName>check if category exist</targetStepName>
        </transition>
        <transition condition="${true}">
            <targetStepName>create category</targetStepName>
        </transition>
    </noopStep>

    <queryStep name="check if category exist" targetDataObjectClass="AssetCategory" resultDataDef="queryAssetResult"
                executionLabelExpression="found ${queryAssetResult.size()} results">

        <transition condition="${queryAssetResult.size() == 0}">
            <targetStepName>create category</targetStepName>
        </transition>
        <transition condition="${true}">
            <targetStepName>add category to asset</targetStepName>
        </transition>

        <criteria>
            <![CDATA[
                <criteria>
                   <and>
                      <condition property="name" op="eq">
                        <test value="${category}" />
                      </condition>
                   </and>
                </criteria>
            ]]>
        </criteria>
    </queryStep>

    <submitHttpStep name="create category"
                    urlExpression="${reachUrl}/reachengine/api/categories"
                    requestMethodExpression="POST"
                    responsePayloadDataDef="jsonPayload"
                    executionLabelExpression="API POST Create Category"
                    responseCodeDataDef="responseCode"
                    nextStep="add category to asset">
        <requestHeader name="auth_user">${user}</requestHeader>
        <requestHeader name="auth_password">${password}</requestHeader>
        <requestHeader name="Content-Type">application/json</requestHeader>
        <requestPayloadItem name="body">{"name":"${category}"}</requestPayloadItem>
    </submitHttpStep>

    <nimbus:changeMetaCategoryStep
            name="add category to asset"
            targetObjectExpression="${subject}"
            nextStep="end">
        <nimbus:addCategory>${category}</nimbus:addCategory>
    </nimbus:changeMetaCategoryStep>

    <!-- success -->
    <noopStep name="end"/>
    <!-- _______________________________INPUTS_____________________________________________ -->
    <contextDataDef name="categoryName"         dataType="String"   userInput="true"/>
    <contextDataDef name="reachUrl"         dataType="String"   defaultDataExpression="${#sysconfig('reachengine.url')}"/>
    <contextDataDef name="checkIfExist"     dataType="Boolean"  defaultDataExpression="true"/>
    <!--___________________________________________________________________________________ -->

    <contextDataDef name="queryAssetResult" dataType="Data Object" multiple="true"/>
    <contextDataDef name="responseCode"     dataType="Integer"/>
    <contextDataDef name="jsonPayload"      dataType="JSON"/>
    <contextDataDef name="result"           dataType="Boolean"/>
    <contextDataDef name="user"             dataType="String" defaultDataExpression="system"/>
    <contextDataDef name="password"         dataType="String" defaultDataExpression="password"/>
</workflow>