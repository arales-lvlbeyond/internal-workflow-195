<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  ~
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://levelsbeyond.com/schema/workflow"
          xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
          xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
          id="processCSVMetadataChanges"
          name="Process CSV Metadata Changes"
          executionLabelExpression="Query Performance Execution Time: ${T(String).valueOf(#this.getEndDate().getTime() - #this.getStartDate().getTime())}ms"
          subjectDOClassName=""
          showInUserInterface="false"
          resultDataDef="totalTime"
          sdkVersion=""
>

    <initialStepName>convert csv to jsons</initialStepName>

	<setContextData name="convert csv to jsons"
		targetDataDef="jsonEntries"
                    pctComplete="10"
		valueExpression="${#convertCsvToJson(csvFile.absolutePath)}"
		nextStep="process metadata changes"
		/>

    <executeSubflowStep name="process metadata changes"
                        targetWorkflowId="updateMetadataFromJSON"
                        pctComplete="10"
                        subjectChangePath="${jsonEntries.size() &gt; metadataBatchSize ? jsonEntries.subList(0, metadataBatchSize) : jsonEntries.subList(0, jsonEntries.size())}"
                        subflowTargetDataDef="jsonEntry">
        <transition condition="${jsonEntries.size() &gt; metadataBatchSize}">
            <targetStepName>reduce array</targetStepName>
        </transition>
        <transition condition="${true}">
            <targetStepName>end - set total time</targetStepName>
        </transition>
    </executeSubflowStep>

    <setContextData name="reduce array"
                    targetDataDef="jsonEntries"
                    pctComplete="10"
		            valueExpression="${jsonEntries.subList(metadataBatchSize, jsonEntries.size())}"
                    nextStep="process metadata changes"/>


	<setContextData name="end - set total time"
                    pctComplete="90"
					targetDataDef="totalTime"
					valueExpression="${T(String).valueOf(#this.getStartDate().getTime() - thisExecution.getStartDate().getTime())}"/>

    <contextDataDef name="metadataBatchSize"  dataType="Integer" defaultDataExpression="100"/>
    <contextDataDef name="csvFile" dataType="File" userInput="true"/>
    <contextDataDef name="jsonEntries" dataType="JSON" multiple="true"/>
    <contextDataDef name="thisExecution" dataType="Data Object" defaultDataExpression="${#this}"/>

    <contextDataDef name="totalTime" dataType="String"/>

</workflow>