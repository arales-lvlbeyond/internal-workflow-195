<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xsi:schemaLocation="
		http://levelsbeyond.com/schema/latest
		https://s3-us-west-2.amazonaws.com/schema.levelsbeyond.com/2.3.16.17962/studio.xsd
	"
	id="createCollection"
	name="createCollection"
	executionLabelExpression="Creating collection named: ${collectionName}"
	subjectDOClassName=""
	showInUserInterface="false"
	resultDataDef="collection"
	sdkVersion=""
	>

	<initialStepName>query for collection</initialStepName>
	
	<queryStep name="query for collection"
		executionLabelExpression="Checking to see if collection ${collectionName} exists >>> ${collection != null}"
		targetDataObjectClass="AssetCollection"
		resultDataDef="collections"
	>
		<transition condition="${collections.size() &gt; 0  and !createDuplicate}">
            <targetStepName>collection already exists</targetStepName>
        </transition>
        <transition condition="${true}">
            <targetStepName>create collection</targetStepName>
        </transition>
		
		<criteria>
            <![CDATA[
    				<criteria>
    					<and>
      						<condition property="name" op="eq" nullTargets="false">
        						<test value="${collectionName}"/>
        					</condition>
    					</and>
    				</criteria>
    			]]>
        </criteria>
	</queryStep>
	
	<saveDataObjectStep name="create collection"
		targetDataObjectClass="AssetCollection"
		resultDataDef="collection"
		executionLabelExpression="Creating collection: ${collectionName}"
		nextStep="end"
	>
        <property name="name">${collectionName}</property>
    </saveDataObjectStep>
	
	<setContextData name="collection already exists"
		executionLabelExpression="Collection named ${collectionName} already exists."
		targetDataDef="collection"
		valueExpression="${collections[0]}"
	/>
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end" />
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	<contextDataDef name="collectionName"               dataType="String" />
	<contextDataDef name="createDuplicate"              dataType="Boolean"          defaultDataExpression="false" />
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="collections"                  dataType="Data Object"      multiple="true" />
	<contextDataDef name="collection"                   dataType="Data Object" />
	
</workflow>