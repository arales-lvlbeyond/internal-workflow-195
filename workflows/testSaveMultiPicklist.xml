<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2018 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
	id="testSaveMultiPicklist"
	name="Test Save Multi Picklist"
	executionLabelExpression="Test Save Multi Picklist | Asset: ${asset.name}"
	subjectDOClassName=""
	showInUserInterface="true"
	sdkVersion=""
	>
	
	<initialStepName>save multi picklist</initialStepName>
	
	<saveDataObjectStep name="save multi picklist"
		dataObjectExpression="${asset.metadata}"
		>
		<!-- a pipe separated string is how you save multiple values to a metadata field -->
		<!-- there is no append functionality, so you must include both old and new values to 'append' -->
		<!-- Pipes at the beginning or end cause no issues. Duplicate values cause no issues. -->
		<property name="testMultiList">${#joinElements(oldValues, '|')}|${#joinElements(newValues, '|')}</property>
	</saveDataObjectStep>
	
	<!-- input -->
	<!-- any asset type with a metadata reference -->
	<contextDataDef name="asset" dataType="Data Object" userInput="true" required="true"/>
	<!-- array of picklist labels that exist in the picklist you want to save to -->
	<contextDataDef name="newLabels" dataType="String" multiple="true" userInput="true" required="true"/>
	
	<!-- processing -->
	<!-- convert the given labels into values/ids -->
	<contextDataDef name="newValues" dataType="String" multiple="true" defaultDataExpression="${newLabels.![#picklistValue('testMultiList', #this)]}"/>
	<!-- existing metadata is given to us as values/ids already -->
	<contextDataDef name="oldValues" dataType="String" multiple="true" defaultDataExpression="${asset.metadata.testMultiList}"/>
	
</workflow>