<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2019 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
	id="testRegexExp"
	name="Test Regex Exp"
	devWorkflow="true"
	executionLabelExpression="Test Regex Exp"
	adminOnly="true"
	subjectDOClassName=""
	showInUserInterface="false"
	sdkVersion=""
>
	
	<initialStepName>test regex</initialStepName>
	
	<groovyStep name="test regex"
		resultDataDef="fixedTimecodes"
		executionLabelExpression="fixing timecodes"
		nextStep="update timecodes"
		>
		<script>
			<![CDATA[
			import java.util.regex.Pattern
			import java.util.regex.Matcher
			
			Pattern pattern = Pattern.compile(/^(2[4-9]|[3-9]\\d)/)
			
			Matcher startMatch = pattern.matcher(startTimecode)
			Matcher endMatch = pattern.matcher(endTimecode)
			
			if (startMatch.any())
			{
				String start = "0" + (startMatch.group(1).toInteger() % 24).toString()
                fixedTimecodes.put('startTimecode', startMatch.replaceAll(start))
			}
			if (endMatch.any())
			{
				String end = "0" + (endMatch.group(1).toInteger() % 24).toString()
				fixedTimecodes.put('endTimecode', endMatch.replaceAll(end))
			}
			
			
			return fixedTimecodes
			
			]]>
		</script>
	</groovyStep>
	
	<setContextData name="update timecodes"
		executionLabelExpression="updating timecodes"
		nextStep="end"
		>
		<set targetDataDef="startTimecode"  valueExpression="${fixedTimecodes.startTimecode == null ? startTimecode : fixedTimecodes.startTimecode}" />
		<set targetDataDef="endTimecode"  valueExpression="${fixedTimecodes.endTimecode == null ? endTimecode : fixedTimecodes.endTimecode}" />
	</setContextData>
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end"/>
	
	
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	
	
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="startTimecode" dataType="String" defaultDataExpression="23:59:39;24" />
	<contextDataDef name="endTimecode" dataType="String"  defaultDataExpression="24:00:41;20"/>
	<contextDataDef name="fixedTimecodes" dataType="JSON"    defaultDataExpression="{}"  />
</workflow>
