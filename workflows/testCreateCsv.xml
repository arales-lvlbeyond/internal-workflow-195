<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2018 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
	id="testCreateCsv"
	name="Test Create CSV"
	executionLabelExpression="Test Create CSV | Asset: ${subject.name}"
	subjectDOClassName="AssetMaster"
	showInUserInterface="true"
	sdkVersion=""
>
	
	<initialStepName>create csv</initialStepName>
	
	
	<groovyStep name="create csv"
		resultDataDef="success"
		>
		<transition condition="${!success}">
			<targetStepName>fail code error</targetStepName>
		</transition>
		<transition condition="${csvFile.exists()}">
			<targetStepName>end</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>fail no file</targetStepName>
		</transition>
		
		<script>
		<![CDATA[
			import com.csvreader.CsvWriter
			
			CsvWriter csv = new CsvWriter(csvFile.absolutePath)
			
			csv.write("assetId")
			csv.write("assetName")
			csv.write("assetSourceFile")
			csv.endRecord()
			
			csv.write(asset.id.toString())
			csv.write(asset.getName())
			csv.write(sourceFile.absolutePath)
			csv.endRecord()
			
			csv.close()
			
			return true
		]]>
		</script>
	</groovyStep>
	
	
	
	<noopStep name="end"/>
	
	
	<failWorkflowStep name="fail code error"
		reasonExpression="fail"
		/>
	
	
	<failWorkflowStep name="fail no file"
		reasonExpression="fail"
		/>

	
	<contextDataDef name="asset"        dataType="Data Object" defaultDataExpression="${subject}"/>
	<contextDataDef name="sourceFile"   dataType="File"        defaultDataExpression="${subject.originalContent.file}"/>
	<contextDataDef name="csvFile"      dataType="File"        defaultDataExpression="/mnt/TylerMedia/csvExport/${#baseFilename(subject.name)}.csv"/>
	<contextDataDef name="success"      dataType="Boolean"     defaultDataExpression="false"/>
</workflow>