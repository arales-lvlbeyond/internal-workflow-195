<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2019 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://levelsbeyond.com/schema/workflow"
          xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
          xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
          id="parseXMLToJson"
          name="Parse XML to JSON"
          executionLabelExpression="Parse XML to JSON"
          subjectDOClassName=""
          showInUserInterface="true"
          sdkVersion="">
    â€‹
    <initialStepName>set xml data def</initialStepName>
    
    <setContextData
        name="set xml data def"
        targetDataDef="xmlObject"
        valueExpression="${inputXMLFile}"
        nextStep="build json for each node"
        devStep="true"
    />
    
    <groovyStep name="build json for each node"
                executionLabelExpression="Building json..."
                resultDataDef="jsonMetadata"
                nextStep="end"
    >
        <script>
            <![CDATA[
			import groovy.*
			import groovy.json.*
			import groovy.util.XmlSlurper
			import org.jdom.output.XMLOutputter
			import com.fasterxml.jackson.databind.node.*
			import com.fasterxml.jackson.annotation.JsonIgnore
			import java.util.List
			import org.jdom.output.XMLOutputter
			
			def nodeJsons = []
			
			def xml = new XmlSlurper(false, false).parseText(new File(inputXMLFilePath).text)
			
			def titlesNodes = xml.titles.children()
			
			titlesNodes.each { title ->
				def workingTitle = title.facet.feature
				
				def newTitleJson = new JsonSlurper().parseText("{}")
				newTitleJson.put('houseCode', title.@id.text()) // must use 'text()' otherwise an exception occurs when serializing the node's attribute to json
				newTitleJson.put('workingTitle', workingTitle.text())
				
				nodeJsons.add(newTitleJson)
			}
			
			return nodeJsons
			]]>
        </script>
    </groovyStep>
    
    <!-- ................................................... End Steps .................................................... -->
    <!-- success -->
    <noopStep name="end" />
    
    <!-- ................................................... Data Defs .................................................... -->
    <contextDataDef name="inputXMLFile"                     dataType="File"         userInput="true" />
    <contextDataDef name="inputXMLFilePath"                 dataType="String"       defaultDataExpression="${inputXMLFile?.absolutePath}" />
    
    <!-- ......... PROCESSING ........... -->
    <contextDataDef name="jsonMetadata"                     dataType="JSON"         multiple="true"/>
    
    <contextDataDef name="testXML" dataType="XML" />
    
    <contextDataDef name="xmlObject"                        dataType="XML"  />
</workflow>