<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2019 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
	id="testDuplicateCopyFile"
	name="Test Duplicate File Copy"
	executionLabelExpression="Test Duplicate File Copy | "
	subjectDOClassName="AssetMaster"
	showInUserInterface="true"
	sdkVersion="">

	<initialStepName>set copy location</initialStepName>
	
	<!-- use the root test path + the absolute path of the content file to determine the test location -->
	<setContextData name="set copy location"
		targetDataDef="copyLocation"
		valueExpression="/reachengine/temp/test/"
		executionLabelExpression="test Location >>> ${copyLocation}"
		pctComplete="10"
	>
		<transition condition="true">
			<targetStepName>check for file</targetStepName>
		</transition>
	</setContextData>
	
	<noopStep name="check for file"
		executionLabelExpression="File: ${fileAtCopyLocation.absolutePath} exists? | ${fileAtCopyLocation.exists()}">
		<transition condition="${fileAtCopyLocation.exists()}">
			<targetStepName>end</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>copy file to test location</targetStepName>
		</transition>
	</noopStep>
	
	<!-- copy the file to the test location -->
	<copyFileStep name="copy file to test location"
		sourceFileExpression="${subject.file}"
		targetDirectoryExpression="${copyLocation}"
		createTargetDirectoryFlag="false"
		resultDataDef="copiedFile"
		executionLabelExpression="copy to location >>> ${copyLocation}"
		pctComplete="40"
		nextStep="end"
	/>
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end" />
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="copyLocation"             dataType="String" />
	<contextDataDef name="fileAtCopyLocation"       dataType="File"     defaultDataExpression="${copyLocation}${#filename(subject.file)}" />
	<contextDataDef name="copiedFile"               dataType="File" />

  
    
</workflow>