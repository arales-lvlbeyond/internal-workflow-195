<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xsi:schemaLocation="
		http://levelsbeyond.com/schema/latest
		https://s3-us-west-2.amazonaws.com/schema.levelsbeyond.com/2.3.16.17962/studio.xsd
	"
	id="extractMetadataFromCSV"
	name="Extract Metadata from CSV"
	executionLabelExpression="Extract Metadata from CSV | "
	subjectDOClassName=""
	showInUserInterface="true"
	sdkVersion=""
	group="Practice Problem"
	resultDataDef="assetInfoJsons"
>

	<initialStepName>convert csv to JSON</initialStepName>
	
	<setContextData name="convert csv to JSON"
		targetDataDef="entryJsons"
		valueExpression="${#convertCsvToJson(csvFile.absolutePath)}"
		nextStep="extract metadata using mapping"
	/>
	
	<!-- create jsons for all asset entries and their metadata jsons from mapping -->
	<groovyStep name="extract metadata using mapping"
		resultDataDef="assetInfoJsons"
		nextStep="end"
	>
		<script>
			<![CDATA[
				import groovy.json.JsonSlurper
				
				/*
				* Example Output json:
				*  {
				*  		"fileName" : "sample_name",
				*  		"metadata" : {
				*  			"field1" : "value1",
				*  			"field2" : "value2"
				*  		}
				*  }
				* */
				
				def list = []
				
				entryJsons.each { entry ->
					def assetInfo = [:]
					
					assetInfo.fileName = entry.get('fileName').asText()
					assetInfo.metadata = [:]
					
					// map json from mapping
					def mapping = [:]
					mapping = new JsonSlurper().parseText(csvMapping.toString())
					
					mapping.each { key, value ->
						def entryMap = [:]
						entryMap = new JsonSlurper().parseText(entry.toString())
						
						entryMap.each { k, v ->
							def kVal = k
							def val = v
							if (k == key)
								assetInfo.metadata.put(value, val)
						}
					}
					list.add(assetInfo)
				}
				
				return list
			]]>
		</script>
	</groovyStep>
	
	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="end" />
	<!-- ................................................... Data Defs .................................................... -->
	<!-- ............ INPUT ............. -->
	<contextDataDef name="csvFile"                  dataType="File"         userInput="true" />
	<contextDataDef name="csvMapping"               dataType="JSON">
		<defaultDataExpression>
				{
					"uuid":"recordOID",
					"wid":"weekID",
					"location":"eventLocation",
					"description":"longDescription",
					"short":"shortDescription",
					"keywords":"keywords",
					"validated":"preValidated",
					"project":"collection",
					"department":"category"
				}
		</defaultDataExpression>
	</contextDataDef>
	
	<!-- ......... PROCESSING ........... -->
	<contextDataDef name="entryJsons"               dataType="JSON"         multiple="true" />
	<contextDataDef name="assetInfoJsons"           dataType="JSON"         multiple="true" />

  
    
</workflow>