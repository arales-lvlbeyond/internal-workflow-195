<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2018 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
	xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
	id="testGroovyAbsolutePath2"
	name="testGroovyAbsolutePath2"
	executionLabelExpression="Test Groovy Absolute Path 2 | File: ${inputFile.absolutePath}"
	subjectDOClassName=""
	showInUserInterface="true"
	resultDataDef="pathsAreEqual"
	sdkVersion=""
	>
	
	<initialStepName>get input path</initialStepName>
	
	
	<groovyStep name="get input path"
		resultDataDef="groovyInputAbsPath"
		nextStep="get workflow file path"
		>
		<script>
		<![CDATA[
			println "Get Input Path"
			println inputFile.getClass().getName()
			println "------------------------------"
			
			if(inputFile.getClass().getName().endsWith("FileWrapper")) {
				return inputFile.getAbsolutePath()
			} else if (inputFile.getClass().getName().endsWith("VirtualFile")) {
				return inputFile.toFile().getAbsolutePath()
			} else {
				return null
			}
		]]>
		</script>
	</groovyStep>
	
	
	<groovyStep name="get workflow file path"
		resultDataDef="groovyAbsPathBuiltFromWorkflow"
		nextStep="eval paths"
		>
		<script>
		<![CDATA[
			println "Get Workflow File Path"
			println fileBuiltFromWorkflow.getClass().getName()
			println "------------------------------"
			
			if(fileBuiltFromWorkflow.getClass().getName().endsWith("FileWrapper")) {
				return fileBuiltFromWorkflow.getAbsolutePath()
			} else if (fileBuiltFromWorkflow.getClass().getName().endsWith("VirtualFile")) {
				return fileBuiltFromWorkflow.toFile().getAbsolutePath()
			} else {
				return null
			}
		]]>
		</script>
	</groovyStep>
	
	
	<noopStep name="eval paths"
		devStep="true"
		>
		<transition condition="${groovyInputAbsPath.equals(workflowInputAbsPath) AND groovyAbsPathBuiltFromWorkflow.equals(workflowInputAbsPath)}">
			<targetStepName>pass</targetStepName>
		</transition>
		<transition condition="${!groovyInputAbsPath.equals(workflowInputAbsPath) AND groovyAbsPathBuiltFromWorkflow.equals(workflowInputAbsPath)}">
			<targetStepName>input failed</targetStepName>
		</transition>
		<transition condition="${groovyInputAbsPath.equals(workflowInputAbsPath) AND !groovyAbsPathBuiltFromWorkflow.equals(workflowInputAbsPath)}">
			<targetStepName>built from workflow failed</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>input and built from workflow failed</targetStepName>
		</transition>
	</noopStep>
	
	
	<noopStep name="pass"/>
	
	<failWorkflowStep name="input failed"                         reasonExpression="input failed"/>
	<failWorkflowStep name="built from workflow failed"           reasonExpression="built from workflow failed"/>
	<failWorkflowStep name="input and built from workflow failed" reasonExpression="input and built from workflow failed"/>
	
	
	<!-- ................................................... Data Defs .................................................... -->
	<contextDataDef name="inputFile"                      dataType="File"    userInput="true"    required="true"/>
	<contextDataDef name="workflowInputAbsPath"           dataType="String"  defaultDataExpression="${inputFile.absolutePath}"/>
	<contextDataDef name="groovyInputAbsPath"             dataType="String"/>
	<contextDataDef name="fileBuiltFromWorkflow"          dataType="File"    defaultDataExpression="${workflowInputAbsPath}"/>
	<contextDataDef name="groovyAbsPathBuiltFromWorkflow" dataType="String"/>
	
</workflow>