<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  ~
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://levelsbeyond.com/schema/workflow"
          xsi:schemaLocation="http://levelsbeyond.com/schema/workflow http://www.levelsbeyond.com/schema/workflow-1.2.xsd"
          id="batchIngestLoadTest"
          name="Batch Ingest Load Test"
          description=""
          executionLabelExpression="Batch Ingest Load Test ${totalExecutionTime}"
          deadlineExpression=""
          subjectDOClassName=""
          showInUserInterface="true"
          resultDataDef=""

>

	<initialStepName>create metadata 1</initialStepName>

    <executeSubflowStep name="create metadata 1"
                        targetWorkflowId="createMetadataFieldIfMissing"
                        nextStep="create metadata 2">

        <subflowContextDataMapping parentDataDef="metadataName1" subflowDataDef="metadataName"/>
        <subflowContextDataMapping parentDataDef="metadataType1" subflowDataDef="metadataType"/>
    </executeSubflowStep>

    <executeSubflowStep name="create metadata 2"
                        targetWorkflowId="createMetadataFieldIfMissing"
                        nextStep="create metadata 4">

        <subflowContextDataMapping parentDataDef="metadataName2" subflowDataDef="metadataName"/>
        <subflowContextDataMapping parentDataDef="metadataType2" subflowDataDef="metadataType"/>
    </executeSubflowStep>

    <!--commented out for now, the GET request in the subflow fails for picklists-->
    <!--<executeSubflowStep name="create metadata 3"-->
                        <!--targetWorkflowId="createMetadataFieldIfMissing"-->
                        <!--nextStep="check if directory is empty">-->

        <!--<subflowContextDataMapping parentDataDef="metadataName3" subflowDataDef="metadataName"/>-->
        <!--<subflowContextDataMapping parentDataDef="metadataType3" subflowDataDef="metadataType"/>-->
    <!--</executeSubflowStep>-->

    <executeSubflowStep name="create metadata 4"
                        targetWorkflowId="createMetadataFieldIfMissing"
                        nextStep="check if directory is empty">

        <subflowContextDataMapping parentDataDef="metadataName4" subflowDataDef="metadataName"/>
        <subflowContextDataMapping parentDataDef="metadataType4" subflowDataDef="metadataType"/>
    </executeSubflowStep>

	<noopStep name="check if directory is empty"
		executionLabelExpression="are there files in the directory? ${filesToIngest != null AND filesToIngest.size() &gt; 0}"
		>
		<transition condition="${filesToIngest != null AND filesToIngest.size() &gt; 0}">
			<targetStepName>query for running subflows</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>no files to process</targetStepName>
		</transition>
	</noopStep>


	<!-- ................................................... Queue Loop ................................................... -->
	<queryStep name="query for running subflows"
			   targetDataObjectClass="WorkflowExecution"
			   resultDataDef="executingSubflows"
			   executionLabelExpression="checking for workflows (with name = ${subflowName}) that match this directory that are also not in a finished state"
			   devStep="false"
			   nextStep="check running subflows"
	>
		<criteria>
			<![CDATA[
            <criteria>
                <and>
                    <condition property="workflowVersion.workflow.key" op="eq">
                        <test value="${ingestSubflow}"/>
                    </condition>
                    <condition property="executionLabel" op="like">
							<test value="%${T(org.apache.commons.lang.StringEscapeUtils).escapeXml(directoryToIngest.absolutePath)}%" />
						</condition>
                    <condition property="status" op="in">
                        <tests>
                            <test value="CREATED" />
                            <test value="QUEUED" />
                            <test value="EXECUTING" />
                         </tests>
                    </condition>
                </and>
            </criteria>
            ]]>
		</criteria>
	</queryStep>

    <noopStep name="check running subflows"
		executionLabelExpression="number of subflows (name = ${subflowName}) running >>> ${executingSubflows.size()} out of ${queueLimit}"
		devStep="true"
		>
		<transition condition="${ executingSubflows.size() &lt; queueLimit }">
			<targetStepName>ready next files</targetStepName>
		</transition>
		<transition condition="${ true }">
			<targetStepName>queue full</targetStepName>
		</transition>
	</noopStep>


	<delayStep name="queue full"
		delaySecondsExpression="${ queryPollInterval }"
		executionLabelExpression="${filesToIngest.size()} files remaining | Subflows running: ${executingSubflows.size()}/${queueLimit} | Waiting ${queryPollInterval} seconds."
		nextStep="query for running subflows"
		/>


	<setContextData name="ready next files"
		targetDataDef="nextFiles"
		valueExpression="${filesToIngest.size() &gt; batchSize ? filesToIngest.subList(0, batchSize) : filesToIngest.subList(0, filesToIngest.size()) }"
		executionLabelExpression="got ${nextFiles.size()} files to process"
		nextStep="remove files from main list"
		devStep="true"
		/>


	<groovyStep name="remove files from main list"
		resultDataDef="filesToIngest"
		executionLabelExpression="remove ${nextFiles.size()} files from the main list"
		nextStep="process files"
		devStep="true"
		>
		<script>
		<![CDATA[
	        filesToIngest.removeAll(nextFiles)
	        return filesToIngest
	     ]]>
		</script>
	</groovyStep>

	<executeSubflowStep name="process files"
						executionLabelExpression="Ingesting ${filesToIngest.size()} Files"
						targetWorkflowId="${ingestSubflow}"
						subjectChangePath="${nextFiles}"
						subflowTargetDataDef="fileToIngest"
						waitForCompletionExpression="false"
						nextStep="check for more files"
	>
		<!-- ingest -->
		<subflowContextDataMapping parentDataDef="sourceAsMezz"             subflowDataDef="sourceAsMezz"/>
		<subflowContextDataMapping parentDataDef="overwriteExisting"        subflowDataDef="overwriteExisting"/>
		<!-- metadata -->
		<subflowContextDataMapping parentDataDef="collections"              subflowDataDef="collections"/>
		<subflowContextDataMapping parentDataDef="categoryNames"            subflowDataDef="categoryNames"/>
		<subflowContextDataMapping parentDataDef="jsonMetadata"             subflowDataDef="jsonMetadata"/>
		<!-- proxies -->
		<subflowContextDataMapping parentDataDef="createMezz"               subflowDataDef="createMezz"/>
		<subflowContextDataMapping parentDataDef="createProxy"              subflowDataDef="createProxy"/>
		<subflowContextDataMapping parentDataDef="createThumbVideo"         subflowDataDef="createThumbVideo"/>
		<subflowContextDataMapping parentDataDef="createThumb"              subflowDataDef="createThumb"/>
	</executeSubflowStep>

    <noopStep name="check for more files"
		executionLabelExpression="number of files remaining >>> ${filesToIngest.size()}"
		devStep="true"
		>
		<transition condition="${filesToIngest.size() &gt; 0}">
			<targetStepName>query for running subflows</targetStepName>
		</transition>
		<transition condition="true">
			<targetStepName>end</targetStepName>
		</transition>
	</noopStep>

	<!-- ................................................... End Steps .................................................... -->
	<!-- success -->
	<noopStep name="no files to process"
		executionLabelExpression="No files in ${directoryToIngest.absolutePath}."
		pctComplete="99"
		nextStep="end"
		/>


	<noopStep name="end"    pctComplete="100"/>


	<!-- fail -->
	<failWorkflowStep name="workflow is running"
		executionLabelExpression="Workflow already executing on the directory"
		reasonExpression="Workflow already executing on the directory"
		/>


	<!-- ............................................... Context Data Defs ................................................ -->
	<contextDataDef name="directoryToIngest" 		dataType="Directory" defaultDataExpression="${#sysconfig('workflow.performance.ingest.directory')}" />
	<contextDataDef name="collections"              dataType="Data Object"  multiple="true"/>

	<!-- metadata options -->
	<contextDataDef name="categoryNames"            dataType="String"           multiple="true"/>
	<contextDataDef name="jsonMetadata"             dataType="JSON">
        <defaultDataExpression>
            <![CDATA[
				{
				"smallStringMetadata":"Here is a static string value!",
				"numberMetadata":"99999999",
				"dateMetadataField":"12/12/1919"
				}
			]]>
        </defaultDataExpression>
	</contextDataDef>
	<!-- ingest options (defaults in subflow) -->
	<contextDataDef name="sourceAsMezz"             dataType="Boolean" defaultDataExpression="true"/>
	<contextDataDef name="overwriteExisting"        dataType="Boolean" defaultDataExpression="false"/>
	<!-- transcode options -->
	<contextDataDef name="createMezz"               dataType="Boolean" defaultDataExpression="false"/>
	<contextDataDef name="createProxy"              dataType="Boolean" defaultDataExpression="false"/>
	<contextDataDef name="createThumb"              dataType="Boolean" defaultDataExpression="false"/>
	<contextDataDef name="createThumbVideo"         dataType="Boolean" defaultDataExpression="false"/>

	<!-- ....... Processing Variables ........ -->
	<contextDataDef name="currentExecutions" 	    dataType="Data Object" 	multiple="true"/>
	<contextDataDef name="filesToIngest" 		    dataType="File"		    multiple="true"     defaultDataExpression="${#walkDir(directoryToIngest, null)}"/>
	<!-- queue loop variables -->
	<contextDataDef name="nextFiles"    		    dataType="File" 		multiple="true"/>
	<contextDataDef name="executingSubflows" 	    dataType="Data Object" 	multiple="true"/>
	<contextDataDef name="queueLimit" 			    dataType="Integer" 		defaultDataExpression="${#sysconfig('workflows.default.ingestDirectory.queueLimit') ?: 11}"/>
	<contextDataDef name="batchSize" 		        dataType="Integer" 		defaultDataExpression="${#sysconfig('workflows.default.ingestDirectory.batchSize') ?: 20}"/>
	<contextDataDef name="queryPollInterval"  	    dataType="Integer" 		defaultDataExpression="${#sysconfig('workflows.default.ingestDirectory.queryPollInterval') ?: 10}"/>
	<contextDataDef name="ingestSubflow"      	    dataType="String" 		defaultDataExpression="_anyAssetIngest"/>

    <contextDataDef name="reachUrl" dataType="String" defaultDataExpression="${#sysconfig('reachengine.url')}"/>
    <contextDataDef name="responseCode" dataType="Integer"/>
    <contextDataDef name="responsePayload" dataType="JSON"/>

    <contextDataDef name="metadataName1" dataType="String" defaultDataExpression="smallStringMetadata"/>
    <contextDataDef name="metadataType1" dataType="String" defaultDataExpression="string"/>
    <contextDataDef name="metadataName2" dataType="String" defaultDataExpression="numberMetadata"/>
    <contextDataDef name="metadataType2" dataType="String" defaultDataExpression="double"/>
    <contextDataDef name="metadataName3" dataType="String" defaultDataExpression="singlePicklistMetaField"/>
    <contextDataDef name="metadataType3" dataType="String" defaultDataExpression="list"/>
    <contextDataDef name="metadataName4" dataType="String" defaultDataExpression="dateMetadataField"/>
    <contextDataDef name="metadataType4" dataType="String" defaultDataExpression="date"/>

</workflow>
