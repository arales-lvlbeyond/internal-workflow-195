<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2020 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  ~
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns="http://levelsbeyond.com/schema/workflow"
          xsi:schemaLocation="http://levelsbeyond.com/schema/workflow http://www.levelsbeyond.com/schema/workflow-1.2.xsd"
          id="createTestAssets"
          name="Create Test Assets"
          description=""
          executionLabelExpression="Creating ${totalTestAssets} video placeholders"
          deadlineExpression=""
          subjectDOClassName=""
          showInUserInterface="false"
          resultDataDef="allAssets"

>
    <initialStepName>ready next items</initialStepName>

    <groovyStep name="ready next items"
                resultDataDef="assetNames"
                pctComplete="10"
                devStep="true"
                nextStep="set counter"
    >
        <script>
            <![CDATA[
			    def newNames = [];
			    for (int i = counter; i < totalTestAssets && i < (counter + batchSize); ++i) {
			        newNames.add(assetNamePrefix+i);
			    }

			    return newNames;
			]]>
        </script>
    </groovyStep>

    <setContextData name="set counter"
                    targetDataDef="counter"
                    pctComplete="10"
                    devStep="true"
                    valueExpression="${counter + batchSize}"
                    nextStep="create placeholders"/>

    <executeSubflowStep name="create placeholders"
                        targetWorkflowId="${subflowID}"
                        subjectChangePath="${assetNames}"
                        subflowTargetDataDef="assetName"
                        resultDataDef="batchAssets"
                        pctComplete="10"
                        nextStep="append assets"
    />

    <groovyStep name="append assets"
                resultDataDef="allAssets"
                devStep="true"
                pctComplete="10"
                nextStep="check for more assets"
    >
        <script>
            <![CDATA[
			    if (allAssets != null ) {
                    allAssets.addAll(batchAssets)
                    return allAssets;
                }
                return batchAssets;
			]]>
        </script>
    </groovyStep>

    <noopStep name="check for more assets"
              executionLabelExpression="number of assets remaining >>> ${totalTestAssets - counter}"
              pctComplete="90"
              devStep="true"
    >
        <transition condition="${counter &lt; totalTestAssets}">
            <targetStepName>ready next items</targetStepName>
        </transition>
        <transition condition="true">
            <targetStepName>end</targetStepName>
        </transition>
    </noopStep>
    <!-- ................................................... End Queue Loop .................................................... -->

    <noopStep name="end"/>


    <!-- ................................................... Data Defs .................................................... -->

    <!-- input -->
    <contextDataDef name="totalTestAssets" dataType="Integer"/>
    <contextDataDef name="assetNamePrefix"  dataType="String" defaultDataExpression="queryTestAsset"/>
    <!-- queue loop variables -->

    <contextDataDef name="counter" dataType="Integer" defaultDataExpression="0"/>
    <contextDataDef name="assetNames" dataType="String" multiple="true"/>
    <contextDataDef name="subflowID" dataType="String" defaultDataExpression="createPlaceholder"/>
    <contextDataDef name="batchSize" dataType="Integer" defaultDataExpression="50"/>

    <contextDataDef name="allAssets" dataType="Data Object" multiple="true"/>
    <contextDataDef name="batchAssets" dataType="Data Object" multiple="true"/>

</workflow>