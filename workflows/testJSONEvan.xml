<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2019 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  -->
<workflow
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://levelsbeyond.com/schema/workflow"
	xsi:schemaLocation="http://levelsbeyond.com/schema/workflow http://www.levelsbeyond.com/schema/latest/studio.xsd"
	id="testJSONEvan"
	name="evan Test JSON"
	executionLabelExpression="testing stuffs"
	description=""
	subjectDOClassName=""
	showInUserInterface="true"
	sdkVersion=""
	devWorkflow="true">
	
	<initialStepName>check status</initialStepName>
	
	
	<noopStep name="check status"
		executionLabelExpression="encoding status = ${encodingPayload.status}">
		
		<transition condition="${encodingPayload.status.equals('processing')}">
			<targetStepName>end</targetStepName>
		</transition>
		<transition condition="${encodingPayload.status.equals('success')}">
			<targetStepName>end2</targetStepName>
		</transition>
		<transition condition="${encodingPayload.status.equals('fail')}">
			<targetStepName>end3</targetStepName>
		</transition>
		<transition condition="${encodingPayload.encodings.status.equals('processing')}">
			<targetStepName>end</targetStepName>
		</transition>
		<transition condition="${encodingPayload.encodings.status.equals('success')}">
			<targetStepName>end2</targetStepName>
		</transition>
		<transition condition="${encodingPayload.encodings.status.equals('fail')}">
			<targetStepName>end3</targetStepName>
		</transition>
		<transition condition="${true}">
			<targetStepName>end4</targetStepName>
		</transition>
	</noopStep>
	
	
	<!-- ........................................ Ending Steps ........................................ -->
	<noopStep name="end" pctComplete="100"/>
	<noopStep name="end2" pctComplete="100" />
	<noopStep name="end3" pctComplete="100" />
	<noopStep name="end4" pctComplete="100" />
	
	
	<contextDataDef name="encodingPayload"     dataType="JSON">
		<defaultDataExpression>
			<![CDATA[
{
	"encodings": {
		"status": "processing"}
}
            ]]>
		</defaultDataExpression>
	</contextDataDef>
</workflow>