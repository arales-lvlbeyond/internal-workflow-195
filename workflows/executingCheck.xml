<!--
  ~ Levels Beyond CONFIDENTIAL
  ~
  ~ Copyright 2003 - 2019 Levels Beyond Incorporated
  ~ All Rights Reserved.
  ~
  ~ NOTICE:  All information contained herein is, and remains
  ~ the property of Levels Beyond Incorporated and its suppliers,
  ~ if any.  The intellectual and technical concepts contained
  ~ herein are proprietary to Levels Beyond Incorporated
  ~ and its suppliers and may be covered by U.S. and Foreign Patents,
  ~ patents in process, and are protected by trade secret or copyright law.
  ~ Dissemination of this information or reproduction of this material
  ~ is unlawful and strictly forbidden unless prior written permission is obtained
  ~ from Levels Beyond Incorporated.
  ~
  -->

<workflow xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://levelsbeyond.com/schema/workflow"
    xmlns:nimbus="http://levelsbeyond.com/schema/workflow/nimbus"
    xsi:schemaLocation="http://levelsbeyond.com/schema/latest http://levelsbeyond.com/schema/latest/studio.xsd"
    id="executingCheck"
    name="Executing Check"
    executionLabelExpression="Check if already executing on ${subject.name}"
    description=""
    subjectDOClassName="AssetMaster"
    subjectQualifierExpression=""
    resultDataDef=""
    showInUserInterface="true"
    adminOnly="true"
    sdkVersion="5.21">


    <initialStepName>check if workflow is already executing</initialStepName>


     <queryStep
            name="check if workflow is already executing"
            pctComplete="5"
            targetDataObjectClass="WorkflowExecution"
            resultDataDef="currentExecutions">
        <transition condition="${currentExecutions.size() == 0}">
            <targetStepName>delay</targetStepName>
        </transition>
        <transition condition="${true}">
            <targetStepName>already executing</targetStepName>
        </transition>
        <criteria>
            <![CDATA[
				<criteria>
					<and>
						<condition property="workflowVersion.workflow.key" op="eq">
							<test value="${ #this.workflow.workflowVersion.workflow.key }" />
						</condition>
						<condition property="subject" op="eq">
							<test value="${ #this.subject }" />
						</condition>
						<condition property="uuid" op="noteq">
							<test value="${ #this.workflow.uuid }" />
						</condition>
						<condition property="status" op="in">
							<tests>
								<test value="CREATED" />
								<test value="QUEUED" />
								<test value="EXECUTING" />
							</tests>
						</condition>
					</and>
				</criteria>
			]]>
        </criteria>
    </queryStep>
    
    <delayStep
            name="delay"
            delaySecondsExpression="${20}"
            nextStep="end"/>
            
    <noopStep name="end"/>
    <noopStep name="already executing"/>
    
    <contextDataDef name="currentExecutions" dataType="Data Object" multiple="true"/>
    <contextDataDef name="user" dataType="Data Object" multiple="true" userInput="true" required="true">
        <picklist>
            <dataObjectSearch dataObjectClass="SecurityUser">
                <searchPath>username</searchPath>
            </dataObjectSearch>
        </picklist>
    </contextDataDef>

</workflow>